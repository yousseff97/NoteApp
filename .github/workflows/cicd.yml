name: CI/CD

on: [pull_request,push]
env:
  LOG_LEVEL: info
  PORT: 3000
  NODE_ENV: test
  MONGO_DB: loubou97_notesdb
  DOCKER_IMAGE_NAME: loubou97/noteapp
  IMAGE_REGISTRY_URL: docker.pkg.github.com
  DOCKER_IMAGE_TAG: latest
jobs:
  Build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1
        - name: npm install
          run: |
            npm install
        - name: npm run test
          run: |
            npm run test
        - name: npm run lint
          run: |
            npm run lint
        - name: npm run compile
          run: |
            npm run compile
        - uses: actions/upload-artifact@master
          with:
            name: dist aritiact
            path: dist/
  

  
  Build-Docker-Image:
    runs-on: ubuntu-latest
    needs: Release
    name: Build image and store in DockerHub
    steps:
      - name: checkout
        uses: actions/checkout@v1
      
      - name: download artifact
        uses: actions/download-artifact@master
        with:
            name: dist aritiact
            path: dist/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{env.DOCKER_IMAGE_NAME}}:${{steps.semver.outputs.version}}
          

  Release:
    if: contains(github.ref, 'main')
    needs: Build
    name: Release on GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Generate Version
        id: semver
        uses: paulhatch/semantic-version@v2.1.1
        with:
          branch: "main"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "v${major}.${minor}.${patch}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.version }}
          release_name: ${{ steps.semver.outputs.version }}
          body: Version ${{ steps.semver.outputs.version }}
          draft: false
          prerelease: false

  Deploy:
    runs-on: ubuntu-latest
    name: Deploy to k8s
    steps:
      - name: Deploy
      - uses: danielr1996/kubectl-action@1.0.0
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          args: apply -f ./k8s/prod/deployment.yaml

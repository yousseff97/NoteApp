name: CI/CD

on: 
  push:
    branches: [main]
env:
  LOG_LEVEL: info
  PORT: 3000
  NODE_ENV: test
  MONGO_DB: loubou97_notesdb
  DOCKER_IMAGE_NAME: loubou97/noteapp
  IMAGE_REGISTRY_URL: docker.pkg.github.com
  DOCKER_IMAGE_TAG: latest
  NAMESPACE: default
  DEPLOYMENT_FULL_PATH: k8s/prod/api-deployment.yaml
  SERVICE_FULL_PATH: k8s/services/api.yaml

jobs:
  Build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v1
        - name: npm install
          run: |
            npm install
        - name: npm run test
          run: |
            npm run test
        - name: npm run lint
          run: |
            npm run lint
        - name: npm run compile
          run: |
            npm run compile
        - uses: actions/upload-artifact@master
          with:
            name: dist aritiact
            path: dist/
  Build-Release-Push:
    runs-on: ubuntu-latest
    needs: Build
    name: Build, Push image and Release Version in Github
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Generate Version
        id: semver
        uses: paulhatch/semantic-version@v2.1.1
        with:
          branch: "main"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "v${major}.${minor}.${patch}"
          bump_each_commit: false

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.version }}
          release_name: ${{ steps.semver.outputs.version }}
          body: Version ${{ steps.semver.outputs.version }}
          draft: false
          prerelease: false

      - name: download artifact
        uses: actions/download-artifact@master
        with:
            name: dist aritiact
            path: dist/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
             ${{env.DOCKER_IMAGE_NAME}}:${{ steps.semver.outputs.version }}
             ${{env.DOCKER_IMAGE_NAME}}:latest
       
      - name: replace Version
        run: sed "s/$VERSION/${{ steps.semver.outputs.version }}/g" ${{env.DEPLOYMENT_FULL_PATH}} > ${{env.DEPLOYMENT_FULL_PATH}}
      - name: replace Password
        run: sed "s/$MONGO_PASSWORD/${{secrets.MONGO_PASSWORD}}/g" ${{env.SERVICE_FULL_PATH}} > ${{env.SERVICE_FULL_PATH}}
      - name: cat files
        run: | 
         ls
         cat  ${{env.DEPLOYMENT_FULL_PATH}} ${{env.SERVICE_FULL_PATH}} 
         cat k8s/prod/* k8s/service/* || ls k8s/ -R
      - uses: azure/aks-set-context@v1
        with:
            creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
            resource-group: 'AKS-ressources'
            cluster-name: 'insat'
      - name: "Create the namespace if it does not exist"
        run: |
          kubectl create ns ${{env.NAMESPACE}} --dry-run -o json | kubectl apply -f -
          
      - uses: Azure/k8s-deploy@v1.3
        with:
          namespace: ${{env.NAMESPACE}}
          manifests: |
           k8s/prod/api-deployment.yaml
           k8s/services/api.yaml
          kubectl-version: 'latest'
